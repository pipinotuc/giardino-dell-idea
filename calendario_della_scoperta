<div class="calendario">
  <h2>ðŸ“… Calendario delle Scoperte</h2>
  <div id="calendar-grid"></div>
</div>

<style>
  .calendario {
    width: 90%;
    max-width: 600px;
    background: #e3f2fd;
    border: 2px solid #64b5f6;
    border-radius: 10px;
    padding: 15px;
    margin-top: 30px;
  }
  .calendario h2 {
    margin-top: 0;
    color: #1976d2;
  }
  #calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 5px;
    text-align: center;
  }
  .calendar-cell {
    padding: 6px;
    background: #fff;
    border-radius: 6px;
    border: 1px solid #90caf9;
    min-height: 40px;
    font-size: 1em;
  }
  .calendar-cell.seed-day {
    background: #c8e6c9;
    font-weight: bold;
    cursor: pointer;
  }
</style>

<script>
  function updateCalendario() {
    const grid = document.getElementById('calendar-grid');
    grid.innerHTML = '';

    const now = new Date();
    const year = now.getFullYear();
    const month = now.getMonth();
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();

    const savedDates = JSON.parse(localStorage.getItem('seedDates')) || [];

    for (let i = 0; i < firstDay; i++) {
      const cell = document.createElement('div');
      grid.appendChild(cell);
    }

    for (let day = 1; day <= daysInMonth; day++) {
      const cell = document.createElement('div');
      const fullDate = `${day.toString().padStart(2, '0')}/${(month+1).toString().padStart(2, '0')}/${year}`;
      cell.classList.add('calendar-cell');
      cell.textContent = day;

      const foundIndex = savedDates.findIndex(date => date && date.includes(fullDate));
      if (foundIndex !== -1) {
        cell.classList.add('seed-day');
        cell.textContent = `${day} ${seeds[foundIndex].emoji}`;
        cell.title = seeds[foundIndex].titolo;
        cell.onclick = () => {
          currentEntry = foundIndex;
          updateDiario();
        }
      }
      grid.appendChild(cell);
    }
  }

  updateCalendario();
</script>
