<div class="calendario">
  <h2>ðŸ“… Calendario delle Scoperte</h2>
  <div id="calendar-grid"></div>
</div>

<style>
  .calendario {
    width: 90%;
    max-width: 600px;
    background: #e3f2fd;
    border: 2px solid #64b5f6;
    border-radius: 12px;
    padding: 16px;
    margin: 30px auto 0;
    box-shadow: 0 4px 8px rgba(100, 181, 246, 0.2);
    font-family: 'Segoe UI', sans-serif;
  }

  .calendario h2 {
    margin-top: 0;
    color: #1976d2;
    text-align: center;
    font-size: 1.4em;
  }

  #calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 6px;
    text-align: center;
  }

  .calendar-cell {
    padding: 8px;
    background: #ffffff;
    border-radius: 6px;
    border: 1px solid #90caf9;
    min-height: 42px;
    font-size: 1em;
    transition: background 0.3s, transform 0.2s;
  }

  .calendar-cell.seed-day {
    background: #c8e6c9;
    font-weight: bold;
    cursor: pointer;
  }

  .calendar-cell.seed-day:hover {
    background: #a5d6a7;
    transform: scale(1.05);
  }
</style>


<script>
  function updateCalendario() {
    const grid = document.getElementById('calendar-grid');
    grid.innerHTML = '';

    const now = new Date();
    const year = now.getFullYear();
    const month = now.getMonth();

    const firstDay = new Date(year, month, 1).getDay(); // giorno della settimana (0=Dom)
    const daysInMonth = new Date(year, month + 1, 0).getDate();

    const savedDates = JSON.parse(localStorage.getItem('seedDates')) || [];

    // Aggiungi celle vuote per i giorni prima del primo del mese
    for (let i = 0; i < firstDay; i++) {
      const cell = document.createElement('div');
      grid.appendChild(cell);
    }

    for (let day = 1; day <= daysInMonth; day++) {
      const cell = document.createElement('div');
      const paddedDay = day.toString().padStart(2, '0');
      const paddedMonth = (month + 1).toString().padStart(2, '0');
      const fullDate = `${paddedDay}/${paddedMonth}/${year}`;

      cell.classList.add('calendar-cell');
      cell.textContent = day;

      // Cerca se la data Ã¨ salvata
      const foundIndex = savedDates.findIndex(date => date && date.includes(fullDate));

      if (foundIndex !== -1 && seeds && seeds[foundIndex]) {
        const seed = seeds[foundIndex];
        cell.classList.add('seed-day');
        cell.textContent = `${day} ${seed.emoji || 'ðŸŒ±'}`;
        cell.title = seed.titolo || 'Scoperta';
        cell.onclick = () => {
          currentEntry = foundIndex;
          updateDiario();
        };
      }

      grid.appendChild(cell);
    }
  }

  updateCalendario();
</script>
