<div class="garden">
  <div id="tree-visual">
    <div class="tree-base">🌱</div>
    <div class="tree-growth" id="tree-growth"></div>
  </div>
</div>

<style>
  #tree-visual {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px 0;
  }

  .tree-base {
  font-size: 2.5em;
  margin-bottom: 8px;
  transition: transform 0.3s ease, font-size 0.3s ease;
}

.tree-base.sprouting {
  transform: scale(1.1);
}

.tree-base.growing {
  transform: scale(1.2) rotate(-2deg);
}

.tree-base.full-grown {
  animation: pulse 1.2s ease-in-out infinite;
}

@keyframes pulse {
  0%   { transform: scale(1.2); }
  50%  { transform: scale(1.3); }
  100% { transform: scale(1.2); }
}
</style>

<script>
  function updateTree() {
  const tree = document.getElementById('tree-growth');
  const base = document.getElementById('tree-base');

  tree.innerHTML = '';
  tree.classList.remove('full-grown');
  base.className = 'tree-base'; // Reset classi

  const visuals = [
    '🌱', '🌿', '🍃', '🌸', '🍎', '🍒', '🍐', '🍂', '🌼', '🥭'
  ];

  for (let i = 0; i < Math.min(planted, visuals.length); i++) {
    const piece = document.createElement('span');
    piece.textContent = visuals[i];
    tree.appendChild(piece);
  }

  // Evoluzione della base dell'albero
  if (planted === 0) {
    base.textContent = '🌱';
  } else if (planted <= 3) {
    base.textContent = '🌿';
    base.classList.add('sprouting');
  } else if (planted <= 6) {
    base.textContent = '🌳';
    base.classList.add('growing');
  } else {
    base.textContent = '🌳';
    base.classList.add('full-grown');
    tree.classList.add('full-grown');
  }
}

</script>

// Alla fine di updateDiario()
updateDiario();
updateTree();
